swagger: "2.0"
info:
  description: "Proposal for ORKG interface  for Journal creation"
  version: "1.0.0"
  title: "ORKG interface  for Journal creation"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "dulip.withanage@tib.eu"
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"
host: "https://github.com/withanage/orkg/"
basePath: "/v2"
tags:
- name: "orkg"
  description: "Open Research Knowledge Graph"
  externalDocs:
    description: "Open Research Knowledge Graph"
    url: "https://www.orkg.org/orkg/"
schemes:
- "https"
- "http"
paths:
  /journals:
    get:
      tags:
      - "journal"
      summary: "Returns  all journals"
      description: "Returns a  list of all the journals"
      operationId: "getIndex"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "integer"
              format: "int32"
      security:
      - api_key: []
  /journal/{journalId}:
    get:
      tags:
      - "journal"
      summary: "returns a Journal by ID"
      description: "For valid response try integer IDs with value >= 1 and <= 100.      Other values will generated exceptions"
      operationId: "getJournalById"
      produces:
        - "application/json"
      parameters:
      - name: "journalId"
        in: "path"
        description: "ID of journal that needs to be fetched"
        required: true
        type: "integer"
        maximum: 100.0
        minimum: 1.0
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Journal"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Order not found"
  /journal/{journalId}/articles:
    get:
      tags:
        - "articles"
      summary: "return all articles by journal id"
      description: "return all articles by journal id"
      operationId: "getArticlesById"
      produces:
        - "application/json"
      parameters:
        - name: "journalId"
          in: "path"
          description: "ID of jouranl to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Article"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Article not found"
      security:
        - api_key: [ ]


  /journal/{journalId}/article/{articleId}:
    get:
      tags:
        - "article"
      summary: "return article by ID"
      description: "Returns a single article"
      operationId: "getArticleById"
      produces:
        - "application/json"
      parameters:
        - name: "articleId"
          in: "path"
          description: "ID of article to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Article"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Article not found"
      security:
        - api_key: [ ]

definitions:
  Journal:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      journalId:
        type: "integer"
        format: "int64"
      title:
        type: "string"
        format: "int32"
      published_date:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "published status"
        enum:
        - "submission"
        - "peer-review"
        - "production"
        - "published"
      complete:
        type: "boolean"
        default: false
    xml:
      name: "Order"
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"
  Article:
    type: "object"
    required:
    - "submission_name"
    - "photoUrls"
    properties:
      submission_name:
        type: "integer"
        format: "int64"
      context_name:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "ORKG Journal"
        enum:
          - "Smart-Review Journal"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "article status in the journal"
        enum:
        - "available"
        - "pending"
        - "sold"
    xml:
      name: "Article"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: ""
  url: ""
